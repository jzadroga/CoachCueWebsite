@model CoachCue.Service.StreamContent
@using CoachCue.Models;

    @switch (Model.ContentType)
    {
        case "empty-news":
        case "empty-matchup":
        case "empty-messages":
            break;

        case "replyMessage":
        case "matchupMessage":
            <div class="item player-item">
                <div class="content">
                    <div class="content-header">
                        <a data-account-id="@Model.MessageItem.CreatedBy" class="username" href="@Url.Action("index", "coach", new { name = Model.MessageItem.UserLink })">@Model.FullName</a>
                        <span>@Model.TimeAgo</span>
                    </div>
                    <img alt="@Model.UserName" class="matchup-msg-item-avatar img-circle" src="@Url.Content("~/assets/img/avatar/" + Model.ProfileImg)" />
                    <span class="matchup-message">@Html.Raw(@Model.MessageItem.Text)</span>
                    @foreach (var mediaObj in Model.MessageItem.Media)
                    {
                        { Html.RenderPartial("_StreamItemMedia", model: mediaObj); }
                    }
                </div>
            </div>
        break;

        case "tweet":
        <div class="item clear child stream-news @Model.CssClass" data-player="@Model.PlayerID">
            <div class="content">
                <img class="avatar" src="@Model.ProfileImg" />
                
                <div class="content-header">
                    <a title="first tooltip" class="username" target="_blank" href="http://twitter.com/@Model.UserName">@Model.FullName</a>
                    <span class="time">@Model.TimeAgo</span>
                </div>
                <span>@Html.Raw(Model.Tweet.Message)</span>
                @if (Model.Tweet.PlayerMentions.Count() > 0)
                {
                    <div class="player-tags">
                        @foreach (Player player in Model.Tweet.PlayerMentions)
                        {
                            <a class="player-tag-container player-popover" href="@Url.Action("index", "player", new { team = player.Team.Slug.ToLower(), name = player.Link })">
                                <span>
                                    <img src="@Url.Content("~/assets/img/Player_Icon_1-orange.png")" />@player.ShortName @player.Position | @player.Team.Slug
                                </span>
                            </a>
                        }
                    </div>
                }
            </div>
        </div>
        break;

        case "matchupSelected":
        case "matchup":
        <div class="stream-matchup @Model.CssClass" id="match-@Model.MatchupItem.Id">
            <div data-player="@Model.PlayerID" data-matchup-id="@Model.MatchupItem.Id" class="matchup-item matchup-item-pick" data-ticks="@Model.DateTicks">
            
                <!-- matchup header -->
                <div class="row matchup-header">
                    <div class="col-md-9 col-xs-9">
                        <a href="@Url.Action("index", "coach", new { name = Model.MatchupItem.UserLink })">
                            <img alt="@Model.UserName" class="avatar player-item-avatar" src="/assets/img/avatar/@Model.MatchupItem.ProfileImage" />
                            <span class="created-by-name">@Model.MatchupItem.Name</span>
                        </a>
                        <span class="created-by-type">@Model.MatchupItem.Type</span>
                    </div>
                    <div class="col-md-3 col-xs-3 text-right">
                        <a class="matchup-time" href="@Href("~/" + Model.MatchupItem.Link)"> Details</a>
                    </div>
                </div>

                <!-- matchup body -->
                <div class="row matchup-body">
                    <div class="col-md-12 col-xs-12 ">
                        <div class="list-group">
                            <!-- players -->
                            @foreach (var player in Model.MatchupItem.Players)
                            {
                                <a href="#" role="button" data-player-name="@player.Name" data-player-id="@player.Id" class="list-group-item stream-select-starter @if(player.Id == Model.SelectedPlayerID){<text>active</text>} @if(Model.ContentType=="matchupSelected"){<text>disabled</text>}">                                
                                    <img alt="@player.Name" class='avatar large media-left' src='@player.ProfileImageLarge' onerror="this.onerror=null;this.src='/assets/img/teams/@(player.Team.Slug + ".jpg")';" />
                                    <div style="display: inline-block; padding-left: 6px;">
                                        <h4 class="list-group-item-heading">@player.Name</h4>
                                        <p class="list-group-item-text">@player.Position | @player.Team.Slug</p>
                                    </div>
                                    <span id="vote-@Model.MatchupItem.Id@player.Id" @if(Model.ContentType == "matchup") {<text>style="display: none"</text>} class="badge vote-count">@Model.MatchupItem.Votes.Where( pl => pl.PlayerId  == player.Id).Count()</span>
                                    <input type="hidden" class="player-tags" data-img="@player.ProfileImage" data-name="@player.ShortName" value="@player.Id" />                                  
                                </a>
                            }
                        </div>
                        <div class="player-tags">                      
                            @foreach (var player in Model.MatchupItem.Players)
                            {
                                <a class="player-tag-container player-popover" href="@Url.Action("index", "player", new { team = player.Team.Slug.ToLower(), name = player.Link })">
                                    <span>
                                        <img src="@Url.Content("~/assets/img/Player_Icon_1-orange.png")" />@player.ShortName @player.Position | @player.Team.Slug
                                    </span>
                                </a>
                            }
                        </div>
                    </div>
              
                    <!-- matchup controls -->
                    <div class="row matchup-controls matchup-item-pick">
                        <div class="col-md-12 col-xs-12">
                        @if (Model.MatchupItem.Votes.Count() > 0 )
                        {
                        <div style="padding-right: 3px" class="stats">                         
                            <ul>
                                <li class="vote-total">
                                    <a href="#" class="ms-action-details"><i class="glyphicon glyphicon-chevron-down"></i> <span class="vote-count-total">@Model.MatchupItem.Votes.Count()</span> votes</a>
                                </li>
                                @foreach (var vote in Model.MatchupItem.Votes.Take(8))
                                {
                                    <li>
                                        <a href="@Url.Action("index", "coach", new { name = vote.UserLink })" rel='tooltip' data-toggle="tooltip" data-placement="top" title="" data-original-title="@vote.Name (@vote.PlayerName)" class="user-avatar-small height" style="background: url('@Url.Content("~/assets/img/avatar/" + vote.ProfileImage)') 50% 50% no-repeat;"></a>
                                    </li>
                                }
                            </ul>
                            
                            <div class="vote-details" style="display: none;">
                                @foreach (var vote in Model.MatchupItem.Votes)
                                {
                                    <div class="item player-item clear">
                                        <div class="content">
                                            <div class="content-header">
                                                <a class="username" href="@Url.Action("index", "coach", new { name = vote.UserLink })">@vote.Name</a>                                         
                                                <span class="user" style="font-size: 12px;"></span>                                        
                                            </div>
                                            <img class="avatar player-item-avatar" src="@Url.Content("~/assets/img/avatar/" + vote.ProfileImage)">

                                            @if (!Model.MatchupItem.Completed)
                                            {
                                                <span class="matchup-selection"><i class='icon-small icon-thumbs-up'></i>@vote.PlayerName</span>
                                            }
                                            else
                                            {
                                                if (vote.IsCorrect)
                                                {
                                                    <span class="coach-correct"><i class='icon-small icon-thumbs-up'></i>@vote.PlayerName</span>
                                                }
                                                else
                                                {
                                                    <span class="coach-wrong"><i class='icon-small icon-thumbs-down'></i>@vote.PlayerName</span>
                                                }
                                            }
                                        </div>
                                    </div>
                                }
                            </div>
                        </div>
                        }
                        </div>
                    </div>

                    <!-- matchup comment area / footer -->
                    <div class="row matchup-footer">              
                        <div class="col-md-12 col-xs-12">
                            <div class="row">
                                <div class="col-md-12 col-xs-12 matchup-message-block">           
                                    <div class="@(Model.MatchupItem.Id + "-message-block")">      
                                        <div class="show-message-block">
                                            @foreach (Message msg in Model.MatchupItem.Messages)
                                            {
                                                <div class="item player-item">
                                                    <div class="content">
                                                        <div class="content-header">
                                                            <a data-account-id="@msg.CreatedBy" class="username" href="@Url.Action("index", "coach", new { name = msg.UserLink })">@msg.Name</a>
                                                            <span>@msg.TimeAgo</span>
                                                        </div>
                                                        <img class="matchup-msg-item-avatar img-circle" src="@Url.Content("~/assets/img/avatar/" + msg.ProfileImage)">
                                                        <span class="matchup-message">@Html.Raw(msg.Text)</span>
                                                        @foreach (var mediaObj in msg.Media)
                                                        {
                                                            { Html.RenderPartial("_StreamItemMedia", model: mediaObj); }
                                                        }
                                                    </div>
                                                </div>
                                            }
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="row">
                                <div class="col-xs-12 message-post-@Model.MatchupItem.Id @if (Model.MatchupItem.Messages.Count() == 0){ <text>empty-message-block</text>}">
                                    <img alt="@Model.UserName" class="img-circle matchup-new-msg-item-avatar" src="@Url.Content("~/assets/img/avatar/" + Model.UserProfileImg)" />
                                    @if (!User.Identity.IsAuthenticated)
                                    {
                                        <form class="form-inline" role="form">
                                            <a role="button" data-register="true" data-backdrop="static" data-keyboard="false" href="#modal-register" data-toggle="modal" data-target="#modal-register">
                                                <input style="width: 100%" class="form-control" type="text" placeholder="Add a comment.." />
                                            </a>
                                        </form>
                                    }
                                    else
                                    {
                                        <form class="form-inline" role="form">
                                            <a data-msg-type="matchup" data-msg="@Model.MatchupItem.Id" class="reply-message-panel" data-backdrop="static" data-keyboard="false" href="#modal-message" data-toggle="modal" data-target="#modal-message">
                                                <input style="width: 100%" class="form-control" type="text" placeholder="Add a comment.." />
                                            </a>
                                        </form>                                 
                                    }
                                </div>
                            </div>
                                
                        </div>                      
                    </div>

                </div>
            </div>
        </div>          
        break;

        case "message":
        <div id="msg-@Model.MessageItem.Id" class="user-message item child clear stream-news @Model.CssClass" data-ticks="@Model.DateTicks">
            <div class="content" style="min-height: 45px;">
                <a class="username" href="@Url.Action("index", "coach", new { name = Model.MessageItem.UserLink })">
                    <img alt="@Model.UserName" class="avatar user-avatar" src="@Url.Content("~/assets/img/avatar/" + Model.ProfileImg)" />
                </a>
                <div class="content-header">          
                    <a class="username" href="@Url.Action("index", "coach", new { name = Model.MessageItem.UserLink })">@Model.FullName</a>
                    <span class="time">@Model.TimeAgo</span>
                </div>
                <span>@Html.Raw(@Model.MessageItem.Text)</span>
                @if (Model.MessageItem.PlayerMentions.Count() > 0) { 
                    <div class="player-tags">                      
                    @foreach (Player player in Model.MessageItem.PlayerMentions)
                    {
                        <a class="player-tag-container player-popover" href="@Url.Action("index", "player", new { team = player.Team.Slug.ToLower(), name = player.Link })">
                            <span>
                                <img src="@Url.Content("~/assets/img/Player_Icon_1-orange.png")" />@player.ShortName @player.Position | @player.Team.Slug
                            </span>
                        </a>
                    }
                    </div>
                }
                @foreach(var mediaObj in Model.MessageItem.Media ){
                    { Html.RenderPartial("_StreamItemMedia", model: mediaObj); }
                }
            </div>
            
            <!-- message comment area / footer -->
            <div class="row matchup-footer message-footer">
                <div class="col-md-12 col-xs-12">                  
                    <div class="row">
                        <div class="col-md-12 col-xs-12 matchup-message-block">
                          
                            <div class="@(Model.MessageItem.Id + "-message-block")">                            
                                <div class="show-message-block">
                                    @foreach (Message msg in Model.MessageItem.Reply)
                                    {
                                        <div class="item player-item">
                                            <div class="content">
                                                <div class="content-header">
                                                    <a data-account-id="@msg.CreatedBy" class="username" href="@Url.Action("index", "coach", new { name = msg.UserLink })">@msg.Name</a>
                                                    <span>@msg.TimeAgo</span>
                                                </div>
                                                <img alt="@Model.UserName" class="matchup-msg-item-avatar img-circle" src="@Url.Content("~/assets/img/avatar/" + msg.ProfileImage)" />
                                                <span class="matchup-message">@Html.Raw(msg.Text)</span>
                                                @foreach (var mediaObj in msg.Media)
                                                {
                                                    { Html.RenderPartial("_StreamItemMedia", model: mediaObj); }
                                                }
                                            </div>
                                        </div>
                                    }
                                </div>
                            </div>
                        </div>                      
                        <div class="row">
                            <div class="col-xs-12 message-post-@Model.MessageItem.Id @if (Model.MessageItem.Reply.Count() == 0){ <text>empty-message-block</text>}">
                                <img alt="@Model.UserName" class="img-circle matchup-new-msg-item-avatar" src="@Url.Content("~/assets/img/avatar/" + Model.UserProfileImg)" />
                                @if (!User.Identity.IsAuthenticated)
                                {
                                    <form class="form-inline" role="form">
                                        <a role="button" data-register="true" data-backdrop="static" data-keyboard="false" href="#modal-register" data-toggle="modal" data-target="#modal-register">
                                            <input style="width: 100%" class="form-control" type="text" placeholder="Add a comment.." />
                                        </a>
                                    </form>
                                }
                                else
                                {
                                    <form data-msg-type="general" class="form-inline" role="form">
                                        <a data-msg-type="general" data-msg="@Model.MessageItem.Id" class="reply-message-panel" data-backdrop="static" data-keyboard="false" href="#modal-message" data-toggle="modal" data-target="#modal-message">
                                            <input style="width: 100%" class="form-control" type="text" placeholder="Add a comment.." />
                                        </a>
                                    </form>
                                }
                            </div>
                        </div>                     
                    </div>
                </div>

            </div>
        </div>
        break;
    }
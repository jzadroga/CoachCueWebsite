@model PlayerStream
@using CoachCue.Model;

<div class='item parent player-header' data-player='@Model.Player.playerID' data-last="@Model.LastUpdateTicks">
    <div class='content'>
        <div class='content-header'>
            @if (!User.Identity.IsAuthenticated){
            <a data-account-type="players" data-account='@Model.Player.playerID' class="btn btn-success btn-mini action" data-toggle="modal" href="#register-modal">Follow</a>
            }else{
                if( Model.Player.isFollowing ){
                <a data-account-type="players" data-account="@Model.Player.playerID" class="btn btn-inverse btn-mini unfollow action" href="#">Unfollow</a>
                }else{
                    <a data-refresh="false" data-account-type="players" data-account='@Model.Player.playerID' class="btn btn-success btn-mini follow action" href="#">Follow</a>
                }
            }
            <a class='username' data-ajax="false" href="@Url.Action("Index", "Player", new { id = Model.Player.playerID, name = Model.Player.linkFullName })">@Model.Player.fullName</a>
        </div>
        <img class='avatar' src='@Model.Player.profilePic' />
        <p class='bio'>@Model.Player.position.positionName&nbsp|&nbsp;@Model.Player.nflteam.teamSlug</p>
    
        <ul class="nav nav-pills stream-filter">
            <li class="active"><a data-filter="none" data-player="@Model.Player.playerID" class="filter-view view-all" href="#">All</a></li>
            <li><a data-filter="stream-news" data-player="@Model.Player.playerID" class="filter-view" href="#">News</a></li>
            <li><a data-filter="stream-matchup" data-player="@Model.Player.playerID" class="filter-view" href="#">Matchups</a></li>
        </ul>
    </div>
</div>